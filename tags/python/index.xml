<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 江小凡的博客</title>
    <link>https://jxiaof.com/tags/python/</link>
    <description>Recent content in python on 江小凡的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2018–2022, jiaoxiaofan and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sun, 05 Sep 2021 10:05:04 +0800</lastBuildDate><atom:link href="https://jxiaof.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Asyncio</title>
      <link>https://jxiaof.com/python-asyncio/</link>
      <pubDate>Mon, 31 May 2021 17:48:25 +0800</pubDate>
      
      <guid>https://jxiaof.com/python-asyncio/</guid>
      <description>协程描述 协程，又称微线程，英文名Coroutine，是运行在单线程中的“并发”，协程相比多线程的一大优势就是省去了多线程之间的切换开销. 协程</description>
    </item>
    
    <item>
      <title>python accelerate</title>
      <link>https://jxiaof.com/python-accelerate/</link>
      <pubDate>Tue, 02 Mar 2021 09:40:43 +0800</pubDate>
      
      <guid>https://jxiaof.com/python-accelerate/</guid>
      <description>python加速 我自己参与了这部分的工作,花了一两周时间去实践,如下: python 程序性能优化的套路一般有两种： jit， 即just in time compiler</description>
    </item>
    
    <item>
      <title>python多任务处理</title>
      <link>https://jxiaof.com/%E5%85%B3%E4%BA%8Epython%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 10 Sep 2020 14:57:37 +0800</pubDate>
      
      <guid>https://jxiaof.com/%E5%85%B3%E4%BA%8Epython%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;h2 id=&#34;多任务有多进程-多线程以及异步协程&#34;&gt;多任务有：多进程 多线程以及异步协程。&lt;/h2&gt;
&lt;p&gt;平时多任务我们会使用 mutilprocess 或者threading 模块 甚至 gvent加上monkey_patch补丁，实现多任务运行，带来任务的高效率执行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FastAPI</title>
      <link>https://jxiaof.com/fastapi/</link>
      <pubDate>Sun, 05 Sep 2021 10:05:04 +0800</pubDate>
      
      <guid>https://jxiaof.com/fastapi/</guid>
      <description>​ 我个人认为fastapi,是一个非常不错的web 框架,为python web开发带来了新的活力,全新的文档openAPI2.0 ,更出色的io</description>
    </item>
    
    <item>
      <title>Python类型注解</title>
      <link>https://jxiaof.com/python%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Fri, 23 Oct 2020 16:30:19 +0800</pubDate>
      
      <guid>https://jxiaof.com/python%E7%B1%BB%E5%9E%8B%E6%B3%A8%E8%A7%A3/</guid>
      <description>typing &amp;mdash; 类型标注支持 函数接受并返回一个字符串，注释像下面这样: def greeting(name: str) -&amp;gt; str: return &amp;#39;Hello &amp;#39; + name 在函数 greeting 中，参数 name 预期是 str 类型，并且返回 str 类型。子类型允许作为</description>
    </item>
    
    <item>
      <title>图像分析与处理</title>
      <link>https://jxiaof.com/%E5%9B%BE%E5%83%8F%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%90%86/</link>
      <pubDate>Fri, 18 Sep 2020 17:48:09 +0800</pubDate>
      
      <guid>https://jxiaof.com/%E5%9B%BE%E5%83%8F%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%90%86/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Python 图像处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写在前面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    本篇文章主要对图像处理有基本认知,是项目开发中容易遇到的问题,并非处理ai人工智能识别与转换.(此外,目前市面上的图像识别以及语音识别已经发展的相当不错.大部分的ai都是根据github开源调试参数.)&lt;/p&gt;
&lt;p&gt;​       多数图像处理与操作技术可以被两个库有效完成，它们是 &lt;strong&gt;Python Imaging Library (PIL)&lt;/strong&gt; 与  &lt;strong&gt;OpenSource Computer Vision (OpenCV)&lt;/strong&gt; 。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
